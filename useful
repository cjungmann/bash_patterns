#!/usr/bin/env bash

is_root()            { [ "$USER" = "root" ]; }
pause_for_keypress() { read -n 1 -p "Press any key to continue."; }


# Terminal escape code functions:

reset_screen()      { echo -n $'\e[2J\e[0;0f'; }
clear_line()        { echo -n $'\e[K'; }
unset_text_colors() { echo -n $'\e[0m'; }

set_text_background()
{
    case "$1" in
        default) echo -n $'\e[49m' ;;
        black)   echo -n $'\e[40m' ;;
        red)     echo -n $'\e[41m' ;;
        green)   echo -n $'\e[42m' ;;
        brown)   echo -n $'\e[43m' ;;
        yellow)  echo -n $'\e[43m' ;;
        blue)    echo -n $'\e[44m' ;;
        magenta) echo -n $'\e[45m' ;;
        cyan)    echo -n $'\e[46m' ;;
        white)   echo -n $'\e[47m' ;;
    esac
}

set_text_foreground()
{
    case "$1" in
        black)   echo -n $'\e[30m'   ;;
        grey)    echo -n $'\e[1;30m' ;;
        red)     echo -n $'\e[1;31m' ;;
        green)   echo -n $'\e[1;32m' ;;
        brown)   echo -n $'\e[2;33m' ;;
        yellow)  echo -n $'\e[1;33m' ;;
        blue)    echo -n $'\e[1;34m' ;;
        magenta) echo -n $'\e[1;35m' ;;
        cyan)    echo -n $'\e[1;36m' ;;
        white)   echo -n $'\e[1;37m' ;;
    esac
}

# Set color before echo, then unset color after echo
cecho()
{
    local msg="$1"
    local color="${2:-green}"
    local background="${3:-default}"

    set_text_background "$background"
    set_text_foreground "$color"
    echo "${msg}"
    unset_text_colors
}

get_ip_address()
{
    # Also consider `ip -o -4 addr | grep '{ print $1 " " $3 }' -`
    # though it doesn't truncate the slash from the IP address.

    local IFS=$'\n'
    local -a lines=( $( ip -o -4 addr ) )

    local line
    local -a lparts

    IFS=$' '
    for line in "${lines[@]}"; do
        lparts=( $line )
        echo "${lparts[1]} ${lparts[3]%/*}"
    done
}

is_local_ip()
{
    local IFS=$'.'
    local -a ip=( $1 )

    if [ "${#ip[@]}" -ne 4 ]; then
       return 1
    fi

    local -i v1="${ip[0]}"
    local -i v2="${ip[1]}"

     if [ "$v1" -eq 10 ]; then
         return 0
     elif [ "$v1" -eq 192 ] && [ "$v2" -eq 168 ]; then
         return 0
     elif [ "$v1" -eq 172 ] && [ "$v2" -ge 16 ] && [ "$v2" -le 31 ]; then
         return 0
     else
         return 1
     fi
}
