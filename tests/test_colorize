#!/usr/bin/env bash

source sources/include

to_continue() { read -n1 -p "Press any key."; }

declare -a Test_Lines=(
    "This is _italics_ and this is **bold**."
    "The __quick__, **bright**, *fox* ran to the _woodshed_."
    "The **rain** in **Spain** _falls_ mainly in the **plains.**"
    "Demonstrate that it **won't** work to _escape\ spaces_."
    "!- Italicized string **bold** continuation"
    "!** Bold string _italics_ continuation"
    "!! This   has   _three_   **space**   intervals"
    "!^ This should be centered"
)

test_parse_colorize_flags()
{
    local -a tests=(
        "!"
        "!_"
        "!!"
        "!__^"
        "!__*!"
        "!**_"
        "!_!"
    )

    show_test()
    {
        local name="$1"
        local -n st_val="$name"
        if [ "$st_val" -eq 0 ]; then
            echo -n $'\e[31;1m'
        else
            echo -n $'\e[32;1m'
        fi
        echo -n "$name"$'\e[m '
    }

    local -i ital
    local -i bold format center
    local test
    for test in "${tests[@]}"; do
        echo -n "testing '${test:1}' "
        parse_colorize_flags "ital" "bold" "format" "center" "${test:1}"
        show_test "ital"
        show_test "bold"
        show_test "format"
        show_test "center"
        echo
    done
}

test_line_by_line()
{
    declare line
    declare colorline
    declare IFS OIFS="$IFS"

    echo "Test line-by-line conversion:"
    for line in "${Test_Lines[@]}"; do
        echo
        colorize_string "colorline" "$line"
        echo "'$line' was converted to:"
        echo "$colorline"
    done
}

: 'This is a multiline
comment.  I do not know
how well it works.
'


test_bound_paragraphs()
{
    local -a paras
    local filepath="../speed_tests.d/roosevelt.txt"
    # local word="American"
    # local scmd=s/"${word}"/*"${word}"*/g

    local scmd=s/\(Americans?\)/\*\\1\*/g

    bind_paragraphs 'paras' < <( sed -E $scmd "$filepath" )
    colorize_array 'paras'

    paragraphs_interaction 'paras' 80
}

###########################
#          MAIN           #
#  Execution Begins Here  #
###########################

# Setup for unexpected termination
save_console_state_hide_cursor
trap restore_console_state_show_cursor SIGINT
trap restore_console_state_show_cursor EXIT


# @def The menu lui_list array
#
# lui_list_runner() only uses the first two columns
# of a row, the first column is what is displayed in the
# list interaction, and the second column is the function
# to call.
declare -a MAIN_MENU=(
    2 0
    "Test line-by-line conversion"         test_line_by_line
    "Test bound paragraphs"                test_bound_paragraphs
    "Test parse_colorize_flags"            test_parse_colorize_flags
)
lui_list_init "MAIN_MENU"

# Optionally define text to sit atop the test menu.
declare -a paras
bind_paragraphs "paras" <<EOF
Select a test and press ENTER to perform the test.

Press ESC or 'q' to terminate the program."
EOF

# The following function call will run the whole program.
# The `paras` parameter is optional.
lui_list_runner "MAIN_MENU" "paras"
